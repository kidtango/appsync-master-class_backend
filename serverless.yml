service: appsync-master-class-backend

plugins:
  - serverless-appsync-plugin
  - serverless-iam-roles-per-function
  - serverless-export-env

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: dev
  environment:
    STAGE: ${self:custom.stage}
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
    REGION: ${self:custom.region}
    # COGNITO_USER_POOL_ID: !Ref CognitoUserPool
    # WEB_COGNITO_USER_POOL_CLIENT_ID: !Ref WebUserPoolClient
    TWEETER_TABLE: !Ref TweeterTable

custom:
  region: ${opt:region, self:provider.region}
  stage: ${opt:stage, self:provider.stage}

appSync: ${file(./serverless.appsync-api.yml)}

package:
  exclude:
    - package-lock.json
    - package.json

functions:
  confirmUserSignup:
    handler: functions/confirm-user-signup.handler
    environment:
      TWEETER_TABLE: !Ref TweeterTable
    iamRoleStatements:
      - Effect: Allow
        Action: dynamodb:PutItem
        Resource: !GetAtt TweeterTable.Arn
  
  getImageUploadUrl:
    handler: functions/get-upload-url.handler
    environment:
      BUCKET_NAME: !Ref AssetsBucket
    iamRoleStatements:
      - Effect: Allow
        Action: 
          - s3:PutObject 
          - s3:PutObjectAcl
        Resource: !Sub ${AssetsBucket.Arn}/*
  
resources:
  Resources:
    TweeterTable:
      Type: AWS::DynamoDB::Table
      Properties:
        BillingMode: PAY_PER_REQUEST
        TableName: TweeterTable
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
          - AttributeName: GSI1_PK
            AttributeType: S
          - AttributeName: GSI1_SK
            AttributeType: S
          - AttributeName: GSI2_PK
            AttributeType: S
          - AttributeName: GSI2_SK
            AttributeType: S
        GlobalSecondaryIndexes:
          - IndexName: GSI1_PK
            KeySchema:
              - AttributeName: GSI1_PK
                KeyType: HASH
              - AttributeName: GSI1_SK
                KeyType: RANGE
            Projection:
                ProjectionType: ALL
          - IndexName: GSI2_PK
            KeySchema:
              - AttributeName: GSI2_PK
                KeyType: HASH
              - AttributeName: GSI2_SK
                KeyType: RANGE
            Projection:
                ProjectionType: ALL
        Tags:
          - Key: Environment
            Value: ${self:custom.stage}
          - Key: Name
            Value: users-table

    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        AutoVerifiedAttributes:
          - email
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireLowercase: false
            RequireNumbers: false
            RequireSymbols: false
            RequireUppercase: false
        UsernameAttributes:
          - email
        Schema:
          - AttributeDataType: String
            Name: name
            Required: false 
            Mutable: true
        LambdaConfig:
          PostConfirmation: !GetAtt ConfirmUserSignupLambdaFunction.Arn
    
    UserPoolInvokeConfirmUserSignupLambdaPermission:
      Type: AWS::Lambda::Permission
      Properties:
        Action: lambda:invokeFunction
        FunctionName: !Ref ConfirmUserSignupLambdaFunction
        Principal: cognito-idp.amazonaws.com
        SourceArn: !GetAtt CognitoUserPool.Arn

    WebUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        UserPoolId: !Ref CognitoUserPool
        ClientName: web
        ExplicitAuthFlows:
          - ALLOW_USER_SRP_AUTH
          - ALLOW_USER_PASSWORD_AUTH
          - ALLOW_REFRESH_TOKEN_AUTH
        PreventUserExistenceErrors: ENABLED
    
    AssetsBucket:
      Type: AWS::S3::Bucket
      Properties:
        AccelerateConfiguration:
          AccelerationStatus: Enabled 
        CorsConfiguration:
          CorsRules:
            - AllowedMethods:
                - GET
                - PUT
              AllowedOrigins:
                - "*"
              AllowedHeaders:
                - '*'
        OwnershipControls:
          Rules:
            - ObjectOwnership: BucketOwnerPreferred
        PublicAccessBlockConfiguration:
          BlockPublicAcls: false
          BlockPublicPolicy: false
          IgnorePublicAcls: false 
          RestrictPublicBuckets: false

  Outputs:
    AwsRegion:
      Value: ${self:custom.region}
    
    CognitoUserPoolId:
      Value: !Ref CognitoUserPool

    WebCognitoUserPoolClientId:
      Value: !Ref WebUserPoolClient